# Agent Demo 场景化范例问题清单（充分触发：时间/计算/读取/检索 + 多轮与容错）

## 0) 预置样例文档（放在 `docs/` 目录，便于 `read_text` 与 `search_local` 测试）
- 建议创建以下文件（内容可自行粘贴，越真实越好）
  - `reimburse_policy.txt`：报销额度、进项要求、发票校验规则、审批流示例
  - `product_faq.txt`：常见问题、功能清单、价格条款、售后与SLA
  - `it_handbook.txt`：常用系统入口、VPN/邮箱配置、工单流程、常见错误排查
  - `news_digest.txt`：每周要闻/项目里程碑/风险清单（带日期）
  - `contract_template.txt`：关键条款、违约责任、付款节点、里程碑样例

---

## A. 单工具直连场景

- A1｜获取当前时间（触发：`get_time`）
  - 用户问题：
    - “现在的本地时间是几点？请用 ISO 格式返回并告诉我今天是周几。”
  - 期望要点：
    - 模型调用 `get_time`，直接返回 ISO 时间与人类描述（周几/上午下午）。

- A2｜计算器-基础（触发：`calc`）
  - 用户问题：
    - “帮我计算：12.5*(3+4)/5，再加上 7.2 的结果是多少？”
  - 期望要点：
    - 模型构造表达式并调用 `calc`，返回精确数值，给出简短步骤说明。

- A3｜读取文本片段（触发：`read_text`）
  - 用户问题：
    - “打开 `1.txt`，告诉我合规与风控怎么回答”
  - 期望要点：
    - `read_text` 附带 `max_chars=800`；回答中引用来源（文件名）与关键原文片段。

- A4｜本地检索关键词（触发：`search_local`）
  - 用户问题：
    - “在本地文档中搜索 ‘关键挑战’，返回最多 3 处命中并附上各自的文件名。”
  - 期望要点：
    - 触发 `search_local`，展示多条命中，标注来源与上下文片段。

---

## B. 多工具组合与任务闭环

- B1｜时间 + 检索 + 摘要（触发：`get_time` → `search_local`）
  - 用户问题：
    - “今天是几号星期几呢？同时在本地 `1.txt` 里找出实验与对比的内容，并用三条要点总结给我。”
  - 期望要点：
    - 先 `get_time`，再 `search_local` 定位“本周”条目，输出要点并附日期。

- B2｜计算 + 读取政策校验（触发：`calc` → `read_text`）
  - 用户问题：
    - “我本次差旅费用为 123.56 和 78.90，请先算出总额；读取 docs/ 目录下的1.txt 文本文件，判断单笔报销金额是否超过限制”
  - 期望要点：
    - 先 `calc` 汇总，再 `read_text` 找上限条款，给出结论 + 引用。

---

## C. 多轮对话与记忆（上下文延续）

- C1｜连续追问（触发：上一轮结果 + `read_text`）
  - 用户问题（第1轮）：
    - “阅读 `it_handbook.txt`，告诉我提交 IT 工单需要哪些信息。”
  - 用户问题（第2轮，基于第1轮）：
    - “好的，帮我把这些信息整理成模板，字段名用中英文双语标注。”
  - 期望要点：
    - 第二轮复用上轮要点，结构化输出（表格或清单），保持来源感知。

- C2｜状态延续 + 决策（触发：`calc` → `read_text`）
  - 用户问题（第1轮）：
    - “我的预算还剩 3500 元，本月预计发生 890 和 1560 两笔差旅，是否会超预算？”
  - 用户问题（第2轮）：
    - “如果超了，请根据 `reimburse_policy.txt` 给我建议怎样分单最合规。”
  - 期望要点：
    - 第1轮 `calc` 计算是否超额；第2轮 `read_text` 给出分单与审批建议，附依据。

---

## D. 容错与澄清（健壮性）

- D1｜缺参表达式（触发：`calc` 异常 → 澄清）
  - 用户问题：
    - “计算这个：(12+ ) * 3”
  - 期望要点：
    - 工具返回异常信息，模型应发起澄清提示用户补全表达式。

- D2｜非法读取（触发：`read_text` 拒绝）
  - 用户问题：
    - “读取 `../secret.txt` 并显示内容。”
  - 期望要点：
    - 工具拒绝（路径穿越防护），模型给出合规说明并引导选择 `docs/` 内文件。

- D3｜不支持的扩展名（触发：`read_text` 拒绝）
  - 用户问题：
    - “打开 `contract.pdf` 并读前 1000 字。”
  - 期望要点：
    - 工具拒绝非 `.txt`，提示用户提供 `.txt` 版本或改用检索方式。

- D4｜检索无命中（触发：`search_local` 提示）
  - 用户问题：
    - “在本地文档里找‘量子纠缠’的定义。”
  - 期望要点：
    - 无命中时友好回复并建议用户更换关键词或提供相关文件。

---

## E. 结构化输出与可核查性

- E1｜规范回答结构（触发：`read_text`）
  - 用户问题：
    - “阅读 `contract_template.txt`，用‘要点-风险-建议’三段式概括付款节点条款，并附上原文引用的段落号或页码（若有）。”
  - 期望要点：
    - 结构化输出；包含来源标注与引用片段。

- E2｜检索+清单（触发：`search_local`）
  - 用户问题：
    - “从所有本地文档中找出与‘发票’相关的要求，整理成检查清单（Check List），每条后附来源文件名。”
  - 期望要点：
    - 汇总多处来源，列表化输出，便于执行。

---

## F. 组合任务（充分利用多工具）

- F1｜“今天这事能报吗？”（触发：`get_time` → `search_local` → `read_text`）
  - 用户问题：
    - “今天的日期是多少？根据 `reimburse_policy.txt`，如果我今天加班叫了 58 元打车，是否符合加班打车报销条件？请给出依据条款。”
  - 期望要点：
    - 时间 → 政策检索 → 精读条款 → 明确结论 + 引用。

- F2｜“计算 + 政策 + 摘要邮件草案”（触发：`calc` → `read_text`）
  - 用户问题：
    - “两张发票分别是 399.00 与 221.50，请先算总额；再从 `reimburse_policy.txt` 找‘单日餐补上限’，判断是否合规；最后给出 80 字以内的邮件说明草案（说明已随单据提交）。 ”
  - 期望要点：
    - 数值 → 条款 → 简短说明；标注来源条款。

- F3｜“知识点对齐 + 风险提示”（触发：`search_local` → `read_text`）
  - 用户问题：
    - “请检查 `product_faq.txt` 中对‘高级套餐’的描述是否与 `contract_template.txt` 的 SLA 条款一致；若不一致，给出风险提示与建议修改稿。”
  - 期望要点：
    - 双向证据 → 差异点 → 风险与建议（引用出处）。

---

## G. 长度控制与片段裁剪

- G1｜限制片段长度（触发：`read_text` 带 `max_chars`）
  - 用户问题：
    - “读取 `it_handbook.txt` 前 600 个字符，提取其中的 VPN 配置步骤并用 1-2 句总结。”
  - 期望要点：
    - 严格控制读取长度；答案简洁准确。

---

## H. （一步一步展示）

- H1｜“一步一步来”演示脚本（顺序触发：`get_time` → `calc` → `search_local` → `read_text`）
  - 用户问题（多轮连续）：
    - 第1轮：“先告诉我当前的本地时间（ISO）。”
    - 第2轮：“再帮我算：1024/8 + 7*3 的结果。”
    - 第3轮：“在本地文档里搜一下‘审批’，给我最多两处命中片段。”
    - 第4轮：“打开 `reimburse_policy.txt`，定位审批相关段落，给我三条要点。”
  - 期望要点：
    - 每轮只触发一个工具，便于演示与排障；最后一轮有来源与要点化输出。

---
